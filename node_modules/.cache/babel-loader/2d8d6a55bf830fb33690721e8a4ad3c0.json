{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState\n});\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case \"DECREMENT\":\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case \"INCREASEBY5\":\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case \"SHOWCOUNTER\":\n      return { ...state,\n        showCounter: !state.showCounter\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/andylau/Desktop/react-redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","counterReducer","state","action","type","value","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAAY,EAAEA;AAFJ,CAAD,CAAX;;AAIA,MAAMI,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACE;AAF3B,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,WAAW,EAAE,CAACG,KAAK,CAACH;AAFf,OAAP;;AAIF;AACE,aAAOG,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,MAAMI,KAAK,GAAGX,WAAW,CAACM,cAAD,CAAzB;AACA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n});\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    case \"INCREASEBY5\":\n      return {\n        ...state,\n        counter: state.counter + action.value,\n      };\n    case \"SHOWCOUNTER\":\n      return {\n        ...state,\n        showCounter: !state.showCounter,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
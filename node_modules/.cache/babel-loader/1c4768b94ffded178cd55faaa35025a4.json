{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case \"DECREMENT\":\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case \"INCREASEBY5\":\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case \"SHOWCOUNTER\":\n      return { ...state,\n        showCounter: !state.showCounter\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/andylau/Desktop/react-redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAAY,EAAEA,YAFJ;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KANO;;AAORO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,KAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,GAAG,CAAE;;AAVV;AAHA,CAAD,CAAX;;AAgBA,MAAMC,cAAc,GAAG,CAACN,KAAK,GAAGN,YAAT,EAAuBS,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACI,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC;AAF3B,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAFf,OAAP;;AAIF;AACE,aAAOI,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AACA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n    toggleCounter() {},\n  },\n});\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    case \"INCREASEBY5\":\n      return {\n        ...state,\n        counter: state.counter + action.value,\n      };\n    case \"SHOWCOUNTER\":\n      return {\n        ...state,\n        showCounter: !state.showCounter,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"INCREMENT\":\n//       return {\n//         ...state,\n//         counter: state.counter + 1,\n//       };\n//     case \"DECREMENT\":\n//       return {\n//         ...state,\n//         counter: state.counter - 1,\n//       };\n//     case \"INCREASEBY5\":\n//       return {\n//         ...state,\n//         counter: state.counter + action.value,\n//       };\n//     case \"SHOWCOUNTER\":\n//       return {\n//         ...state,\n//         showCounter: !state.showCounter,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  //combination of reducers\n  //reducer: { counter: counterSlice.reducer },\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions.increment();\nexport default store;","map":{"version":3,"sources":["/Users/andylau/Desktop/react-redux/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAAY,EAAEA,YAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,KAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AAC3B;AACA;AACAe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AAHK,CAAD,CAA5B;AAKA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAb,CAAqBV,SAArB,EAAvB;AAEP,eAAeO,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n// const counterReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"INCREMENT\":\n//       return {\n//         ...state,\n//         counter: state.counter + 1,\n//       };\n//     case \"DECREMENT\":\n//       return {\n//         ...state,\n//         counter: state.counter - 1,\n//       };\n//     case \"INCREASEBY5\":\n//       return {\n//         ...state,\n//         counter: state.counter + action.value,\n//       };\n//     case \"SHOWCOUNTER\":\n//       return {\n//         ...state,\n//         showCounter: !state.showCounter,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(counterReducer);\nconst store = configureStore({\n  //combination of reducers\n  //reducer: { counter: counterSlice.reducer },\n  reducer: counterSlice.reducer,\n});\nexport const counterActions = counterSlice.actions.increment();\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}